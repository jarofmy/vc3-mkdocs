{
    "docs": [
        {
            "location": "/",
            "text": "Welcome to VC3 Documentation\n\n\nFor portal access visit \nvirtualclusters.org\n.\n\n\nGetting Started With VC3\n\n\nVirtual Clusters for Community Computation, or VC3, is a platform for connecting\nclusters, grids, and clouds. VC3 can run overlay systems for a variety of\ncluster frameworks to make disparate resources appear as a single \u201cvirtual\u201d\nresource for collaborative science.\n\n\nVC3 User Guide\n\n\nAll users of VC3 should read this portion of the documentation. This provides examples and documentation around VC3\u2019s assortment of options and how to specify them on the portal.\n\n\nGlossary\n\n\nThis section addresses a variety of specific terms used throughout this project\nand documentation.",
            "title": "Home"
        },
        {
            "location": "/#welcome-to-vc3-documentation",
            "text": "For portal access visit  virtualclusters.org .",
            "title": "Welcome to VC3 Documentation"
        },
        {
            "location": "/#getting-started-with-vc3",
            "text": "Virtual Clusters for Community Computation, or VC3, is a platform for connecting\nclusters, grids, and clouds. VC3 can run overlay systems for a variety of\ncluster frameworks to make disparate resources appear as a single \u201cvirtual\u201d\nresource for collaborative science.",
            "title": "Getting Started With VC3"
        },
        {
            "location": "/#vc3-user-guide",
            "text": "All users of VC3 should read this portion of the documentation. This provides examples and documentation around VC3\u2019s assortment of options and how to specify them on the portal.",
            "title": "VC3 User Guide"
        },
        {
            "location": "/#glossary",
            "text": "This section addresses a variety of specific terms used throughout this project\nand documentation.",
            "title": "Glossary"
        },
        {
            "location": "/userguide/vc3-user-guide/",
            "text": "VC3 User Guide\n\n\nBuilding Your First Virtual Cluster\n\n\nPrerequisites\n\n\nIn order to use VC3, you\u2019ll need an allocation or account with with a supported target resource. These include, but are not limited to:\n\n\n\n\nUniversity of Chicago - Research Computing Center\n\n\nUniversity of Notre Dame - Center for Research Computing\n\n\nBrookhaven National Laboratory - Scientific Data & Computing Center\n\n\nSyracuse University - Research Computing\n\n\nTexas Advanced Computing Center\n\n\nNERSC\n\n\nAmazon Web Services\n\n\nOpen Science Grid\n\n\nand more!\n\n\n\n\nInstitutions and resources are added frequently - be sure to subscribe to our\nnewsletter and visit \nVirtual Clusters\n!\n\n\nLogin or Create Account\n\n\nWhen you first visit \nVirtual Clusters\n, you\u2019ll\nbe presented with a Login link in the top right of the screen. Click \u201cLogin\u201d -\nthis will take you to a \nGlobus\n sign-in site.\n\n\n\n\nSign in to Globus\n\n\nYou will then be asked to sign in with your institutional identity, or your\nGlobus ID. If you are using the former, simply type in the name of your\ninstitution and click \u201cContinue\u201d. Proceed to Step 3a.\n\n\nOtherwise, click \u201cSign in with Globus ID\u201d and proceed to the alternate Step 3b.\n\n\n\n\nLogin with your institutional ID\n\n\nYou should be presented with a login page for your institutional ID, with your\ninstitution\u2019s branding. Go ahead and sign-in now. Note that your password is not\nsent to the VC3 or Globus web portals. Continue to step 4.\n\n\n\n\nLogin with your Globus ID\n\n\n(\nAlternative step - if you do not have an institutional ID supported by Globus\n)\n\n\n<\u2013 Globus ID page \u2013>\n\n\nComplete or update your VC3 profile\n\n\nOnce you have signed in, you\u2019ll be asked to update or complete your VC3 profile\nwith information such as your Institution and any other information we cannot\ndirectly extract from your Globus account. Click \u201cUpdate Profile\u201d once done.\n\n\n\n\nConnect an Allocation\n\n\nAfter updating your profile, you can connect an allocation to the VC3 service.\nAn allocation, in VC3, is defined as combination of a username and resource\ntarget that consumes some type of compute unit - regardless of whether it is\nbilled as Service Units (many HPC centers), dollars (AWS, GCE), or priority\n(HTCondor and other opportunistic systems).\n\n\nClicking My Allocations on the left shows all allocations currently associated\nwith your account. You may select a new one by clicking Connect Allocation.\n\n\n\n\nYou will be able to select a resource target from the drop down menu, and enter\nan account name for the resource. This is the same account name that you use to\nSSH to the remote system.\n\n\n\n\nOnce you\u2019ve connected your allocation, the system will validate it.\n\n\n\n\nIn order to create a virtual cluster, the VC3 software needs to be able to SSH\nto the remote resource. If you click your allocation, you should see a section\ntitled Public Token.\n\n\n\n\nYou will need to add this token to your Unix account, in the file\n~/.ssh/authorized_keys. You can either edit this file with your favorite editor\n(such as nano, vim, or emacs), or use the echo command to append it to the\nauthorized keys file.\n\n\n\n\nThis token allows the VC3 system to SSH into a cluster as yourself and submit\njobs on your, or your project\u2019s, behalf.\n\n\nDefining a Project\n\n\nVC3, as a platform for cooperative scientific computing, allows you create\nprojects to share your allocations and virtual clusters with trusted members of\nyour group, laboratory, or collaboration. To start a new project, click\n\u201cProjects\u201d on the sidebar, then click \u201c+ New Project\u201d.\n\n\n\n\nYou may give your project an aribtrary name and choose initial project members.\nOnce finished, click \u201cCreate Project\u201d.\n\n\n\n\nYou should be returned to the Projects page, where you will be able to see all\nof your projects and memberships.\n\n\n\n\nCreating a Cluster Template\n\n\nVC3 allows users to create \u201cCluster Templates\u201d that describe the components of\ntheir virtual cluster, including number of head nodes, worker nodes, etc. We\ncurrently support HTCondor and WorkQueue clusters with dynamic worker nodes,\nand fixed head nodes.\n\n\nTo define a new template, click the \u201cCluster Templates\u201d link on the left panel.\nYou\u2019ll be able to give your cluster a name, select framework, and number of\nworkers. Click \u201cDefine Cluster\u201d to finish creating the template.\n\n\n\n\nResources\n\n\nThe VC3 team curates an ever-expanding list of resources for end-users, with a\nfocus on Campus Clusters, HPC centers, and Cloud resources. You can find these\nresources by clicking the \u201cResources\u201d link on the left panel.\n\n\nYou can also click an individual resource and see expanded information, such as\nbatch system type, links to documentation, etc.\n\n\nLaunching a Virtual Cluster",
            "title": "VC3 User Guide"
        },
        {
            "location": "/userguide/vc3-user-guide/#vc3-user-guide",
            "text": "",
            "title": "VC3 User Guide"
        },
        {
            "location": "/userguide/vc3-user-guide/#building-your-first-virtual-cluster",
            "text": "Prerequisites  In order to use VC3, you\u2019ll need an allocation or account with with a supported target resource. These include, but are not limited to:   University of Chicago - Research Computing Center  University of Notre Dame - Center for Research Computing  Brookhaven National Laboratory - Scientific Data & Computing Center  Syracuse University - Research Computing  Texas Advanced Computing Center  NERSC  Amazon Web Services  Open Science Grid  and more!   Institutions and resources are added frequently - be sure to subscribe to our\nnewsletter and visit  Virtual Clusters !",
            "title": "Building Your First Virtual Cluster"
        },
        {
            "location": "/userguide/vc3-user-guide/#login-or-create-account",
            "text": "When you first visit  Virtual Clusters , you\u2019ll\nbe presented with a Login link in the top right of the screen. Click \u201cLogin\u201d -\nthis will take you to a  Globus  sign-in site.",
            "title": "Login or Create Account"
        },
        {
            "location": "/userguide/vc3-user-guide/#sign-in-to-globus",
            "text": "You will then be asked to sign in with your institutional identity, or your\nGlobus ID. If you are using the former, simply type in the name of your\ninstitution and click \u201cContinue\u201d. Proceed to Step 3a.  Otherwise, click \u201cSign in with Globus ID\u201d and proceed to the alternate Step 3b.",
            "title": "Sign in to Globus"
        },
        {
            "location": "/userguide/vc3-user-guide/#login-with-your-institutional-id",
            "text": "You should be presented with a login page for your institutional ID, with your\ninstitution\u2019s branding. Go ahead and sign-in now. Note that your password is not\nsent to the VC3 or Globus web portals. Continue to step 4.",
            "title": "Login with your institutional ID"
        },
        {
            "location": "/userguide/vc3-user-guide/#login-with-your-globus-id",
            "text": "( Alternative step - if you do not have an institutional ID supported by Globus )  <\u2013 Globus ID page \u2013>",
            "title": "Login with your Globus ID"
        },
        {
            "location": "/userguide/vc3-user-guide/#complete-or-update-your-vc3-profile",
            "text": "Once you have signed in, you\u2019ll be asked to update or complete your VC3 profile\nwith information such as your Institution and any other information we cannot\ndirectly extract from your Globus account. Click \u201cUpdate Profile\u201d once done.",
            "title": "Complete or update your VC3 profile"
        },
        {
            "location": "/userguide/vc3-user-guide/#connect-an-allocation",
            "text": "After updating your profile, you can connect an allocation to the VC3 service.\nAn allocation, in VC3, is defined as combination of a username and resource\ntarget that consumes some type of compute unit - regardless of whether it is\nbilled as Service Units (many HPC centers), dollars (AWS, GCE), or priority\n(HTCondor and other opportunistic systems).  Clicking My Allocations on the left shows all allocations currently associated\nwith your account. You may select a new one by clicking Connect Allocation.   You will be able to select a resource target from the drop down menu, and enter\nan account name for the resource. This is the same account name that you use to\nSSH to the remote system.   Once you\u2019ve connected your allocation, the system will validate it.   In order to create a virtual cluster, the VC3 software needs to be able to SSH\nto the remote resource. If you click your allocation, you should see a section\ntitled Public Token.   You will need to add this token to your Unix account, in the file\n~/.ssh/authorized_keys. You can either edit this file with your favorite editor\n(such as nano, vim, or emacs), or use the echo command to append it to the\nauthorized keys file.   This token allows the VC3 system to SSH into a cluster as yourself and submit\njobs on your, or your project\u2019s, behalf.",
            "title": "Connect an Allocation"
        },
        {
            "location": "/userguide/vc3-user-guide/#defining-a-project",
            "text": "VC3, as a platform for cooperative scientific computing, allows you create\nprojects to share your allocations and virtual clusters with trusted members of\nyour group, laboratory, or collaboration. To start a new project, click\n\u201cProjects\u201d on the sidebar, then click \u201c+ New Project\u201d.   You may give your project an aribtrary name and choose initial project members.\nOnce finished, click \u201cCreate Project\u201d.   You should be returned to the Projects page, where you will be able to see all\nof your projects and memberships.",
            "title": "Defining a Project"
        },
        {
            "location": "/userguide/vc3-user-guide/#creating-a-cluster-template",
            "text": "VC3 allows users to create \u201cCluster Templates\u201d that describe the components of\ntheir virtual cluster, including number of head nodes, worker nodes, etc. We\ncurrently support HTCondor and WorkQueue clusters with dynamic worker nodes,\nand fixed head nodes.  To define a new template, click the \u201cCluster Templates\u201d link on the left panel.\nYou\u2019ll be able to give your cluster a name, select framework, and number of\nworkers. Click \u201cDefine Cluster\u201d to finish creating the template.",
            "title": "Creating a Cluster Template"
        },
        {
            "location": "/userguide/vc3-user-guide/#resources",
            "text": "The VC3 team curates an ever-expanding list of resources for end-users, with a\nfocus on Campus Clusters, HPC centers, and Cloud resources. You can find these\nresources by clicking the \u201cResources\u201d link on the left panel.  You can also click an individual resource and see expanded information, such as\nbatch system type, links to documentation, etc.",
            "title": "Resources"
        },
        {
            "location": "/userguide/vc3-user-guide/#launching-a-virtual-cluster",
            "text": "",
            "title": "Launching a Virtual Cluster"
        },
        {
            "location": "/userguide/vc3-dev-guide/",
            "text": "VC3 Developers Guide\n\n\nVC3 Master\n\n\nVC3 Builder\n\n\nVC3 Client\n\n\nVC3 Info-Service\n\n\nVC3 Factory Plugins\n\n\nVC3 Playbooks",
            "title": "VC3 Developers Guide"
        },
        {
            "location": "/userguide/vc3-dev-guide/#vc3-developers-guide",
            "text": "",
            "title": "VC3 Developers Guide"
        },
        {
            "location": "/userguide/vc3-dev-guide/#vc3-master",
            "text": "",
            "title": "VC3 Master"
        },
        {
            "location": "/userguide/vc3-dev-guide/#vc3-builder",
            "text": "",
            "title": "VC3 Builder"
        },
        {
            "location": "/userguide/vc3-dev-guide/#vc3-client",
            "text": "",
            "title": "VC3 Client"
        },
        {
            "location": "/userguide/vc3-dev-guide/#vc3-info-service",
            "text": "",
            "title": "VC3 Info-Service"
        },
        {
            "location": "/userguide/vc3-dev-guide/#vc3-factory-plugins",
            "text": "",
            "title": "VC3 Factory Plugins"
        },
        {
            "location": "/userguide/vc3-dev-guide/#vc3-playbooks",
            "text": "",
            "title": "VC3 Playbooks"
        },
        {
            "location": "/glossary/",
            "text": "Glossary of Terms Used in VC3 Documentation\n\n\nInternal\n\n\ncluster states\n\n\nList of each possible state of a cluster throughout its lifecycle:\n\n\n\n\nNEW - Request was just created.\n\n\nVALIDATED - Request has been validated for basic correctness.\n\n\nPENDING - Request is valid and is waiting to be instantiated.\n\n\nGROWING - Cluster is in the process of being instantiated but is not yet usable.\n\n\nRUNNING - Cluster is ready to use.\n\n\nSHRINKING - Cluster resources are being removed.\n\n\nTERMINATING - Cluster is about to be destroyed.\n\n\nTERMINATED - Cluster no longer exists.\n\n\n\n\ncredible\n\n\n\n\nCredible is a 3rd-party utility for programmatically generating, storing, and retrieving security tokens.\n\n\n\n\ndynamic infrastructure\n\n\n\n\nServices that are instantiated upon a virtual cluster request, such as the factory.\n\n\n\n\nfactory\n\n\n\n\nThe scheduler and resource manager for middleware.\n\n\n\n\nformatter\n\n\n\n\nA plugin that augments the output of |Flake8| when passed to flake8 --format.\n\n\n\n\ninfo service\n\n\n\n\n\n\nLong-running daemon that interacts with the information database on behalf of other services.\n\n\n\n\n\n\nThe VC3 info service serves as both a persistence mechanism for the overall service, and a message bus between components. Information is stored and retrieved in the form of JSON-formatted documents, which thus form a single tree of information entities/nodes. The service optionally allows access security by enforcing ACLs at each node level.\n\n\n\n\n\n\nPIN\n\n\n\n\nPersonal Identification Number. One-time password for configuring a VC3 resource via vc3-resource-tool\n\n\n\n\nplugin-manager\n\n\n\n\nThe plugin manager is a 3rd-party small utility for quickly constructing plugin objects from configuration input.\n\n\n\n\nrequest ID\n\n\n\n\nUnique identifier for a virtual cluster request.\n\n\n\n\nstatic infrastructure\n\n\n\n\nA set of long-running services, such as the Info Service, Master, etc.\n\n\n\n\nvc3-application\n\n\n\n\nOne of the supported middleware applications to be deployed as an overlay defining a virtual cluster.\n\n\n\n\nvc3-builder\n\n\n\n\nPilot-like executable that prepares an environment for middleware and user applications. The vc3-builder is a pilot-like utility, submitted to resource targets, which programmatically satisfies all requested dependencies before handing off control to the middleware layer. Its special feature is the ability to satisfy dependencies in different ways on different targets, depending on what it finds, e.g. it can tell if a dep is already satisfied, can download a pre-built library, or dynamically compile a dep if needed. Several builders can simultaneously satisfy dependencies in parallel on a resource (provided a shared filesystem).\n\n\n\n\nvc3-client\n\n\n\n\nPackage containing the VC3-aware library for creating, listing, updating, and deleting entities within the infoservice. It also contains a command line interface to the library.\n\n\n\n\nvc3-core\n\n\n\n\nThe VC3 component that coordinates activity within the dynamic infrastructure. One vc3-core exists per virtual cluster Request during its lifecycle. A vc3-core will typically start a vc3-factory, along with any central components the cluster will need (e.g. an HTCondor collector/negotiator/schedd, a WorkQueue catalog, or a Squid server).\n\n\n\n\nvc3-master\n\n\n\n\nPackage containing the long-running daemon, running on the static infrastructure, that manages the lifecycle of all virtual cluster Requests. The vc3-master is a long-running daemon, running on the static infrastructure, that manages the lifecycle of all virtual cluster Requests. It polls the infoservice for new Requests, and spawns vc3-core instances on the dynamic infrastructure to service them. It also handles the generation and processing of all derived entities within the infoservice tree.\n\n\n\n\nvc3-release\n\n\n\n\nThis is a developer package that contains various setup and test utilities, and artifacts needed to create and use a YUM RPM repository.\n\n\n\n\nvc3-resource-tool\n\n\n\n\nThe vc3-resource-tool is a utility to be run by end users on resource targets in order to pair and enable them for usage by the VC3 system.\n\n\n\n\nExternal\n\n\nAllocation\n\n\n\n\nAn Allocation refers to an User and a Resource Each Allocation must be owned by an User. Allocations are divisible/fractionable, and can be given to Projects. Allocations may not be oversubscribed. But unbounded Allocations may be parents of multiple unbounded SubAllocations. Bounded Allocations cannot spawn unbounded SubAllocations. If a Resource grants hard allocation and allows backfill mode, those are two distinct Allocations (one hard and one unbounded)\n\n\n\n\nAuthentication\n\n\n\n\nThe current mechanism for users to sign-up and create accounts into the VC3 project is by authenticating themselves with their GlobusID account.\n\n\n\n\nMFA\n\n\n\n\nmulti-factor authentication\n\n\n\n\nProject\n\n\n\n\na collection of \u201cAllocations\u201d. It has at least 1 \u201cuser owner\u201d, and 0 or more non-owner members. The owner is also a member.\n\n\n\n\nRequest\n\n\n\n\nEntity that encapsulates all information that defines a particular virtual cluster. Creating a new Request triggers creation of the cluster.\n\n\n\n\nRequest templates\n\n\n\n\na list of pre-existing forms to be used as base for new cluster requests creation.\n\n\n\n\nResource\n\n\n\n\nAny target on which a vc3-builder will run to provide computing power to a virtual cluster.\n\n\n\n\nResource profiles\n\n\n\n\na list of pre-existing forms to be used as base for new resource definition.\n\n\n\n\nService unit\n\n\n\n\n\n\nService units are essentially just walltime hours, with minimum charges based on minimum cores or minimum nodes per job. Much like HEPSPEC, the SUs can be normalized/converted based on LINPACK benchmarks. Doc from XSEDE: https://portal.xsede.org/knowledge-base/-/kb/document/bazo\n\n\n\n\n\n\nFor storage, possibly with multiple allocations per user, examples are scratch disk vs long term storage.\n\n\n\n\n\n\nExotic devices like GPUs may or may not be accounted for, depending on the resource.\n\n\n\n\n\n\nSub-Allocation\n\n\n\n\nA SubAllocation can be defined in terms of fraction or units (cpuhours?, $dollars, HEPSPEC) or be unbounded. SubAllocations are children of an Allocation.\n\n\n\n\nUser\n\n\n\n\nEvery User has 0 or more Allocations. Users are owners or members of one or more projects. A User in a project can make Request(s) utilizing project member\u2019s Allocations",
            "title": "Glossary"
        },
        {
            "location": "/glossary/#glossary-of-terms-used-in-vc3-documentation",
            "text": "",
            "title": "Glossary of Terms Used in VC3 Documentation"
        },
        {
            "location": "/glossary/#internal",
            "text": "",
            "title": "Internal"
        },
        {
            "location": "/glossary/#cluster-states",
            "text": "List of each possible state of a cluster throughout its lifecycle:   NEW - Request was just created.  VALIDATED - Request has been validated for basic correctness.  PENDING - Request is valid and is waiting to be instantiated.  GROWING - Cluster is in the process of being instantiated but is not yet usable.  RUNNING - Cluster is ready to use.  SHRINKING - Cluster resources are being removed.  TERMINATING - Cluster is about to be destroyed.  TERMINATED - Cluster no longer exists.",
            "title": "cluster states"
        },
        {
            "location": "/glossary/#credible",
            "text": "Credible is a 3rd-party utility for programmatically generating, storing, and retrieving security tokens.",
            "title": "credible"
        },
        {
            "location": "/glossary/#dynamic-infrastructure",
            "text": "Services that are instantiated upon a virtual cluster request, such as the factory.",
            "title": "dynamic infrastructure"
        },
        {
            "location": "/glossary/#factory",
            "text": "The scheduler and resource manager for middleware.",
            "title": "factory"
        },
        {
            "location": "/glossary/#formatter",
            "text": "A plugin that augments the output of |Flake8| when passed to flake8 --format.",
            "title": "formatter"
        },
        {
            "location": "/glossary/#info-service",
            "text": "Long-running daemon that interacts with the information database on behalf of other services.    The VC3 info service serves as both a persistence mechanism for the overall service, and a message bus between components. Information is stored and retrieved in the form of JSON-formatted documents, which thus form a single tree of information entities/nodes. The service optionally allows access security by enforcing ACLs at each node level.",
            "title": "info service"
        },
        {
            "location": "/glossary/#pin",
            "text": "Personal Identification Number. One-time password for configuring a VC3 resource via vc3-resource-tool",
            "title": "PIN"
        },
        {
            "location": "/glossary/#plugin-manager",
            "text": "The plugin manager is a 3rd-party small utility for quickly constructing plugin objects from configuration input.",
            "title": "plugin-manager"
        },
        {
            "location": "/glossary/#request-id",
            "text": "Unique identifier for a virtual cluster request.",
            "title": "request ID"
        },
        {
            "location": "/glossary/#static-infrastructure",
            "text": "A set of long-running services, such as the Info Service, Master, etc.",
            "title": "static infrastructure"
        },
        {
            "location": "/glossary/#vc3-application",
            "text": "One of the supported middleware applications to be deployed as an overlay defining a virtual cluster.",
            "title": "vc3-application"
        },
        {
            "location": "/glossary/#vc3-builder",
            "text": "Pilot-like executable that prepares an environment for middleware and user applications. The vc3-builder is a pilot-like utility, submitted to resource targets, which programmatically satisfies all requested dependencies before handing off control to the middleware layer. Its special feature is the ability to satisfy dependencies in different ways on different targets, depending on what it finds, e.g. it can tell if a dep is already satisfied, can download a pre-built library, or dynamically compile a dep if needed. Several builders can simultaneously satisfy dependencies in parallel on a resource (provided a shared filesystem).",
            "title": "vc3-builder"
        },
        {
            "location": "/glossary/#vc3-client",
            "text": "Package containing the VC3-aware library for creating, listing, updating, and deleting entities within the infoservice. It also contains a command line interface to the library.",
            "title": "vc3-client"
        },
        {
            "location": "/glossary/#vc3-core",
            "text": "The VC3 component that coordinates activity within the dynamic infrastructure. One vc3-core exists per virtual cluster Request during its lifecycle. A vc3-core will typically start a vc3-factory, along with any central components the cluster will need (e.g. an HTCondor collector/negotiator/schedd, a WorkQueue catalog, or a Squid server).",
            "title": "vc3-core"
        },
        {
            "location": "/glossary/#vc3-master",
            "text": "Package containing the long-running daemon, running on the static infrastructure, that manages the lifecycle of all virtual cluster Requests. The vc3-master is a long-running daemon, running on the static infrastructure, that manages the lifecycle of all virtual cluster Requests. It polls the infoservice for new Requests, and spawns vc3-core instances on the dynamic infrastructure to service them. It also handles the generation and processing of all derived entities within the infoservice tree.",
            "title": "vc3-master"
        },
        {
            "location": "/glossary/#vc3-release",
            "text": "This is a developer package that contains various setup and test utilities, and artifacts needed to create and use a YUM RPM repository.",
            "title": "vc3-release"
        },
        {
            "location": "/glossary/#vc3-resource-tool",
            "text": "The vc3-resource-tool is a utility to be run by end users on resource targets in order to pair and enable them for usage by the VC3 system.",
            "title": "vc3-resource-tool"
        },
        {
            "location": "/glossary/#external",
            "text": "",
            "title": "External"
        },
        {
            "location": "/glossary/#allocation",
            "text": "An Allocation refers to an User and a Resource Each Allocation must be owned by an User. Allocations are divisible/fractionable, and can be given to Projects. Allocations may not be oversubscribed. But unbounded Allocations may be parents of multiple unbounded SubAllocations. Bounded Allocations cannot spawn unbounded SubAllocations. If a Resource grants hard allocation and allows backfill mode, those are two distinct Allocations (one hard and one unbounded)",
            "title": "Allocation"
        },
        {
            "location": "/glossary/#authentication",
            "text": "The current mechanism for users to sign-up and create accounts into the VC3 project is by authenticating themselves with their GlobusID account.",
            "title": "Authentication"
        },
        {
            "location": "/glossary/#mfa",
            "text": "multi-factor authentication",
            "title": "MFA"
        },
        {
            "location": "/glossary/#project",
            "text": "a collection of \u201cAllocations\u201d. It has at least 1 \u201cuser owner\u201d, and 0 or more non-owner members. The owner is also a member.",
            "title": "Project"
        },
        {
            "location": "/glossary/#request",
            "text": "Entity that encapsulates all information that defines a particular virtual cluster. Creating a new Request triggers creation of the cluster.",
            "title": "Request"
        },
        {
            "location": "/glossary/#request-templates",
            "text": "a list of pre-existing forms to be used as base for new cluster requests creation.",
            "title": "Request templates"
        },
        {
            "location": "/glossary/#resource",
            "text": "Any target on which a vc3-builder will run to provide computing power to a virtual cluster.",
            "title": "Resource"
        },
        {
            "location": "/glossary/#resource-profiles",
            "text": "a list of pre-existing forms to be used as base for new resource definition.",
            "title": "Resource profiles"
        },
        {
            "location": "/glossary/#service-unit",
            "text": "Service units are essentially just walltime hours, with minimum charges based on minimum cores or minimum nodes per job. Much like HEPSPEC, the SUs can be normalized/converted based on LINPACK benchmarks. Doc from XSEDE: https://portal.xsede.org/knowledge-base/-/kb/document/bazo    For storage, possibly with multiple allocations per user, examples are scratch disk vs long term storage.    Exotic devices like GPUs may or may not be accounted for, depending on the resource.",
            "title": "Service unit"
        },
        {
            "location": "/glossary/#sub-allocation",
            "text": "A SubAllocation can be defined in terms of fraction or units (cpuhours?, $dollars, HEPSPEC) or be unbounded. SubAllocations are children of an Allocation.",
            "title": "Sub-Allocation"
        },
        {
            "location": "/glossary/#user",
            "text": "Every User has 0 or more Allocations. Users are owners or members of one or more projects. A User in a project can make Request(s) utilizing project member\u2019s Allocations",
            "title": "User"
        },
        {
            "location": "/mkcommands/",
            "text": "MK Docs Cheatsheet\n\n\nConfigure Pages and Navigation\n\n\nThe page configuration may be added/edited in the \nmkdocs.yml\n file, which will\nthen appear on the nav-bar.\n\n\nA simple pages configuration looks like this:\n\n\npages:\n- 'index.md'\n- 'user-guide-1.md'\n- 'glossary.md'\n\n\n\n\nThis example will build two pages at the top level nav-bar, and will have\ntheir titles automatically inferred from their respective filenames. In order to\nprovide custom names for these pages, they may be added before their filenames:\n\n\npages:\n- Home: index.md\n- User Guide: user-guide-1.md\n\n\n\n\nMultilevel Documentation\n\n\nSubsections can be created by listing related pages together under a section\ntitle. For example:\n\n\npages:\n- Home: 'index.md'\n- User Guide:\n    - 'VC3 User Guide': 'userguide/vc3-user-guide.md'\n    - 'VC3 Developers Guide': 'userguide/vc3-dev-guide.md'\n\n\n\n\nWith the above configuration we have two top level sections: Home and User\nGuide. Then under User Guide we have two sub pages, VC3 User Guide and\nVC3 Developers Guide.\n\n\nProject layout\n\n\nmkdocs.yml      # The configuration file.\ndocs/\n    css/\n                # The custom css file to overwrite original MK Docs styling\n    img/        # The folder for all relevant img files\n    userguide/  # VC3 User Guide\n    index.md    # The documentation homepage.\n    glossary.md # The documentation glossary\n    ...         # Other markdown pages, images and other files.\n\n\n\nLinks\n\n\nCreate simple links by wrapping square brackets around the link text and\n  round brackets around the URL:\n\n\n[VC3](http://virtualclusters.org/)\n\n\n\nIf you want to give your readers an extra about the link that they're about to follow you can set a link title:\n\n\n[VC3](http://virtualclusters.org/ \"Virtual Clusters for Community Computation\")\n\n\n\nTitles usually appear as a tooltip when you hover over the link, and help search engines work out what a page is about.\n\n\nImages\n\n\nSave all relevant images within the \nimg\n directory located at\n\nvc3-mkdocs/docs/img/\n. If you want to add an image to any doc, you may simply\ncall the image file:\n\n\n![image-name-here](../img/image-file-name.png)\n\n\n\nNotes\n\n\nYou may add notes or warnings to docs:\n\n\n!!! note\n    This portion of VC3\u2018s documentation is a highlighted note\n\n!!! warning\n    This portion of VC3\u2018s documentation is a highlighted warning\n\n\n\n\n...will produce:\n\n\n\n\nNote\n\n\nThis portion of VC3\u2018s documentation is a highlighted note\n\n\n\n\n\n\nWarning\n\n\nThis portion of VC3\u2018s documentation is a highlighted note\n\n\n\n\nCommands\n\n\nYou should be able to edit specific pages directly by clicking on the Edit\nGithub link on the top right of the page and submitting PRs. However, if you\ndecide to clone the entire documentation project, here are the basic commands\nrequired for quickly building the static page.\n\n\n\n\nmkdocs new [dir-name]\n - Create a new project.\n\n\nmkdocs serve\n - Start the live-reloading docs server.\n\n\nmkdocs build\n - Build the documentation site.\n\n\nmkdocs help\n - Print this help message.",
            "title": "MK Docs Cheatsheet"
        },
        {
            "location": "/mkcommands/#mk-docs-cheatsheet",
            "text": "",
            "title": "MK Docs Cheatsheet"
        },
        {
            "location": "/mkcommands/#configure-pages-and-navigation",
            "text": "The page configuration may be added/edited in the  mkdocs.yml  file, which will\nthen appear on the nav-bar.  A simple pages configuration looks like this:  pages:\n- 'index.md'\n- 'user-guide-1.md'\n- 'glossary.md'  This example will build two pages at the top level nav-bar, and will have\ntheir titles automatically inferred from their respective filenames. In order to\nprovide custom names for these pages, they may be added before their filenames:  pages:\n- Home: index.md\n- User Guide: user-guide-1.md",
            "title": "Configure Pages and Navigation"
        },
        {
            "location": "/mkcommands/#multilevel-documentation",
            "text": "Subsections can be created by listing related pages together under a section\ntitle. For example:  pages:\n- Home: 'index.md'\n- User Guide:\n    - 'VC3 User Guide': 'userguide/vc3-user-guide.md'\n    - 'VC3 Developers Guide': 'userguide/vc3-dev-guide.md'  With the above configuration we have two top level sections: Home and User\nGuide. Then under User Guide we have two sub pages, VC3 User Guide and\nVC3 Developers Guide.",
            "title": "Multilevel Documentation"
        },
        {
            "location": "/mkcommands/#project-layout",
            "text": "mkdocs.yml      # The configuration file.\ndocs/\n    css/\n                # The custom css file to overwrite original MK Docs styling\n    img/        # The folder for all relevant img files\n    userguide/  # VC3 User Guide\n    index.md    # The documentation homepage.\n    glossary.md # The documentation glossary\n    ...         # Other markdown pages, images and other files.",
            "title": "Project layout"
        },
        {
            "location": "/mkcommands/#links",
            "text": "Create simple links by wrapping square brackets around the link text and\n  round brackets around the URL:  [VC3](http://virtualclusters.org/)  If you want to give your readers an extra about the link that they're about to follow you can set a link title:  [VC3](http://virtualclusters.org/ \"Virtual Clusters for Community Computation\")  Titles usually appear as a tooltip when you hover over the link, and help search engines work out what a page is about.",
            "title": "Links"
        },
        {
            "location": "/mkcommands/#images",
            "text": "Save all relevant images within the  img  directory located at vc3-mkdocs/docs/img/ . If you want to add an image to any doc, you may simply\ncall the image file:  ![image-name-here](../img/image-file-name.png)",
            "title": "Images"
        },
        {
            "location": "/mkcommands/#notes",
            "text": "You may add notes or warnings to docs:  !!! note\n    This portion of VC3\u2018s documentation is a highlighted note\n\n!!! warning\n    This portion of VC3\u2018s documentation is a highlighted warning  ...will produce:   Note  This portion of VC3\u2018s documentation is a highlighted note    Warning  This portion of VC3\u2018s documentation is a highlighted note",
            "title": "Notes"
        },
        {
            "location": "/mkcommands/#commands",
            "text": "You should be able to edit specific pages directly by clicking on the Edit\nGithub link on the top right of the page and submitting PRs. However, if you\ndecide to clone the entire documentation project, here are the basic commands\nrequired for quickly building the static page.   mkdocs new [dir-name]  - Create a new project.  mkdocs serve  - Start the live-reloading docs server.  mkdocs build  - Build the documentation site.  mkdocs help  - Print this help message.",
            "title": "Commands"
        }
    ]
}